# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  buildConfiguration: 'Release'

steps:
- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '3.0.100'

- task: DotNetCoreCLI@2
  inputs:
    command: publish
    projects: 'DynHosts.Server.csproj'
    publishWebProjects: True
    arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
    zipAfterPublish: True

- script: dotnet publish $(Build.Repository.LocalPath)/src/DynHosts.Client/DynHosts.Client.csproj --configuration $(BuildConfiguration) --output $(Build.BinariesDirectory)/client-x64 --runtime win-x64
  displayName: 'dotnet publish win-x64'

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(Build.BinariesDirectory)/client-x64'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/dyn-hosts-client-$(Build.BuildId)-win-x64.zip'
    replaceExistingArchive: true

- script: dotnet publish $(Build.Repository.LocalPath)/src/DynHosts.Client/DynHosts.Client.csproj --configuration $(BuildConfiguration) --output $(Build.BinariesDirectory)/client-x86 --runtime win-x86
  displayName: 'dotnet publish win-x86'

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(Build.BinariesDirectory)/client-x86'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/dyn-hosts-client-$(Build.BuildId)-win-x86.zip'
    replaceExistingArchive: true

# this code takes all the files in $(Build.ArtifactStagingDirectory) and uploads them as an artifact of your build.
- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)' 
    artifactName: 'drop'